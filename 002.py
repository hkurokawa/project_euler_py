"""
Project Euler Problem #2
=========================

Each new term in the Fibonacci sequence is generated by adding the
previous two terms. By starting with 1 and 2, the first 10 terms will be:

                  1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

Find the sum of all the even-valued terms in the sequence which do not
exceed four million.
"""

def memoize(f):
    memo = {}
    def g(*args):
        if args not in memo:
            memo[args] = f(*args)
        return memo[args]
    return g

@memoize
def fib(n):
    if n < 3:
        return n
    else:
        return fib(n-1) + fib(n-2)

def even_sum_fib_iter():
    sum = 0
    i = 0
    while True:
        sum = sum + fib(i * 3 + 2)
        yield sum
        i = i + 1
    
if __name__ == "__main__":
    ans = 0
    for i in even_sum_fib_iter():
        ans = i
        if i > 4000000:
            break
    # This is not the sum which do not exceed four million but the minimum sum which exceeds four million.
    # I am not sure why this is the correct answer. I am wondering the correct answer should be the previous sum, 1089154.
    print ans
